{"version":3,"sources":["App.js","index.js"],"names":["App","useState","myId","setMyId","stream","setStream","users","setUsers","incomingCall","setIncomingCall","userCalling","setUserCalling","callerSignal","setCallerSignal","userVideo","useRef","partnerVideo","socket","useEffect","current","io","connect","document","querySelector","navigator","mediaDevices","getUserMedia","video","audio","then","srcObject","catch","err0r","console","log","on","data","Object","keys","from","signal","className","length","map","user","href","onClick","e","preventDefault","id","peer","Peer","initiator","trickle","emit","userToCall","signalData","callPeer","autoPlay","muted","ref","to","ReactDOM","render","StrictMode","getElementById"],"mappings":"uOAgIeA,MA3Hf,WAAgB,IAAD,EAEYC,qBAFZ,mBAENC,EAFM,KAECC,EAFD,OAGgBF,qBAHhB,mBAGNG,EAHM,KAGGC,EAHH,OAIcJ,mBAAS,IAJvB,mBAINK,EAJM,KAIEC,EAJF,OAK4BN,oBAAS,GALrC,mBAKNO,EALM,KAKSC,EALT,OAM0BR,mBAAS,IANnC,mBAMNS,EANM,KAMQC,EANR,OAO4BV,qBAP5B,mBAONW,EAPM,KAOSC,EAPT,KASPC,EAAYC,mBACZC,EAAeD,mBACfE,EAASF,mBA2Ef,OAzEAG,qBAAU,WACRD,EAAOE,QAAUC,IAAGC,QAAQ,KAChBC,SAASC,cAAc,QAC7BC,UAAUC,aAAaC,cACzBF,UAAUC,aAAaC,aAAa,CAAEC,OAAO,EAAOC,OAAM,IACvDC,MAAK,SAAUzB,GACdC,EAAUD,GACNU,EAAUK,UACZL,EAAUK,QAAQW,UAAY1B,MAIjC2B,OAAM,SAAUC,GACfC,QAAQC,IAAI,4BAGpBjB,EAAOE,QAAQgB,GAAG,UAAW,SAACC,GAC5BjC,EAAQiC,MAGVnB,EAAOE,QAAQgB,GAAG,YAAa,SAACC,GAC9B7B,EAAS8B,OAAOC,KAAKF,OAGvBnB,EAAOE,QAAQgB,GAAG,gBAAiB,SAACC,GAClC3B,GAAgB,GAChBE,EAAeyB,EAAKG,MACpB1B,EAAgBuB,EAAKI,QACrBP,QAAQC,IAAIE,QAEd,IA4CA,yBAAKK,UAAU,WACb,wBAAIA,UAAU,iBAAd,kBAEEnC,GAASA,EAAMoC,OAAS,GAC1B,yBAAKD,UAAU,cAEXnC,EAAMqC,KAAI,SAAAC,GACR,GAAIA,IAAS1C,EAGb,OACA,uBAAG2C,KAAK,GAAGJ,UAAU,gBAAgBK,QAAS,SAACC,GAAOA,EAAEC,iBArDjD,SAACC,GAChB,IAAMC,EAAO,IAAIC,IAAK,CACpBC,WAAW,EACXC,SAAS,EACTjD,OAAQA,IAEV8C,EAAKf,GAAG,UAAW,SAACC,GAClBnB,EAAOE,QAAQmC,KAAK,WAAa,CAACC,WAAaN,EAAKO,WAAapB,EAAOG,KAAOrC,OAGjFgD,EAAKf,GAAG,UAAW,SAAA/B,GACbY,EAAaG,UACfH,EAAaG,QAAQW,UAAY1B,MAIrCa,EAAOE,QAAQgB,GAAG,gBAAiB,SAAAK,GACjCU,EAAKV,OAAOA,GACZP,QAAQC,IAAIM,MAmCoEiB,CAASb,KAAnF,QAAiGA,OAMvG,yBAAKH,UAAU,aACb,yBAAKQ,GAAG,aACN,2BAAOS,UAAQ,EAACC,OAAK,EAACV,GAAG,MAAMW,IAAK9C,KAEtC,yBAAKmC,GAAG,aACN,2BAAOS,SAAS,OAAOT,GAAG,YAAYW,IAAK5C,MAI7CR,GACA,6BACE,6DAAmCE,EAAnC,KACA,4BAAQoC,QAjDG,WACjBrC,GAAgB,GAChB,IAAMyC,EAAO,IAAIC,IAAK,CACpBC,WAAU,EACVC,SAAQ,EACRjD,OAAQA,IAGV8C,EAAKf,GAAG,UAAW,SAAAC,GACjBnB,EAAOE,QAAQmC,KAAK,aAAe,CAACd,OAAQJ,EAAOyB,GAAInD,OAGzDwC,EAAKf,GAAG,UAAW,SAAA/B,GACfY,EAAaG,QAAQW,UAAY1B,KAGrC8C,EAAKV,OAAO5B,KAiCN,kBCpHVkD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF1C,SAAS2C,eAAe,U","file":"static/js/main.0183ad77.chunk.js","sourcesContent":["import React , {useState, useEffect, useRef} from 'react';\nimport io from 'socket.io-client';\nimport Peer from \"simple-peer\";\n\n\nfunction App() {\n\n  const [myId , setMyId] = useState();  \n  const [stream , setStream] = useState();\n  const [users , setUsers] = useState([])\n  const [incomingCall , setIncomingCall] = useState(false);\n  const [userCalling , setUserCalling] = useState(\"\");\n  const [callerSignal , setCallerSignal] = useState();\n\n  const userVideo = useRef();\n  const partnerVideo = useRef();\n  const socket = useRef();\n\n  useEffect(()=>{\n    socket.current = io.connect(\"/\")\n    let video = document.querySelector(\"#vid\");\n      if (navigator.mediaDevices.getUserMedia) {\n        navigator.mediaDevices.getUserMedia({ video: true , audio:true })\n          .then(function (stream) {\n            setStream(stream);\n            if (userVideo.current){\n              userVideo.current.srcObject = stream;\n            }\n          })\n\n          .catch(function (err0r) {\n            console.log(\"Something went wrong!\");\n          });\n  }\n    socket.current.on(\"yourID\" , (data) => {\n      setMyId(data);\n    })\n\n    socket.current.on(\"allUsers\" , (data) => {\n      setUsers(Object.keys(data))\n    })\n\n    socket.current.on(\"incomingCall\" , (data) => {\n      setIncomingCall(true);\n      setUserCalling(data.from)\n      setCallerSignal(data.signal)\n      console.log(data)\n    })\n} , [])\n\n  const callPeer = (id) => {\n    const peer = new Peer({\n      initiator: true ,\n      trickle: false,\n      stream: stream\n    })\n    peer.on(\"signal\" , (data) => {\n      socket.current.emit(\"callUser\" , {userToCall : id , signalData : data , from : myId })\n    })\n\n    peer.on(\"stream\" , stream => {\n      if (partnerVideo.current){\n        partnerVideo.current.srcObject = stream;\n      }\n    })\n\n    socket.current.on(\"callAccepted\" , signal => {\n      peer.signal(signal);\n      console.log(signal);\n    })\n  }\n\n  const acceptCall = () => {\n    setIncomingCall(false);\n    const peer = new Peer({\n      initiator:false,\n      trickle:false,\n      stream: stream\n    })\n\n    peer.on(\"signal\" , data => {\n      socket.current.emit(\"acceptCall\" , {signal: data , to: userCalling})\n    })\n\n    peer.on(\"stream\" , stream => {\n        partnerVideo.current.srcObject = stream;\n    })\n\n    peer.signal(callerSignal)\n  }\n\n  return (\n    <div className=\"mainDiv\">\n      <h1 className=\"friendsOnline\">Friends Online</h1>\n      {\n        users && users.length > 0 && \n      <div className=\"friendsDiv\">\n        {\n          users.map(user => {\n            if (user === myId){\n              return;\n            }\n            return(\n            <a href=\"\" className=\"callFriendBtn\" onClick={(e) => {e.preventDefault(); callPeer(user)}}>Call {user}</a>\n            )\n          })\n        }\n      </div>\n      }\n      <div className=\"videosDiv\">\n        <div id=\"container\">\n          <video autoPlay muted id=\"vid\" ref={userVideo}/>\n        </div>\n        <div id=\"container\">\n          <video autoPlay=\"true\" id=\"friendVid\" ref={partnerVideo}/>\n        </div>\n      </div>\n      {\n        incomingCall && \n        <div>\n          <h1>You are receiving a call from {userCalling}!</h1>\n          <button onClick={acceptCall} >Accept Call</button>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}